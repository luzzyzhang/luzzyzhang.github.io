"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"atomic-habits","metadata":{"permalink":"/blog/atomic-habits","source":"@site/blog/2023-04-12-atomic-habits.mdx","title":"Atomic Habits","description":"Summary of book Atomic Habits.","date":"2023-04-12T00:00:00.000Z","formattedDate":"April 12, 2023","tags":[{"label":"til","permalink":"/blog/tags/til"},{"label":"psychology","permalink":"/blog/tags/psychology"},{"label":"self-help","permalink":"/blog/tags/self-help"}],"readingTime":5.88,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"atomic-habits","title":"Atomic Habits","tags":["til","psychology","self-help"]},"nextItem":{"title":"The Art of Writing Software","permalink":"/blog/art-of-writing-software"}},"content":"Summary of book Atomic Habits.\\n\\nYou are your habits(We are the sum of our habits).\\n\\nHow to build good habits and break bad ones?\\n\\nHow to make the small changes that will transform your habits and deliver\\nremarkable results?\\n\\nHow to build a system for getting 1% better every day?\\n\\n```mdx-code-block\\nimport LiteYouTubeEmbed from \'react-lite-youtube-embed\';\\nimport \'react-lite-youtube-embed/dist/LiteYouTubeEmbed.css\'\\n```\\n\\n```mdx-code-block\\n<div className=\\"video-container\\">\\n  <LiteYouTubeEmbed\\n    // cSpell:ignore Yhyx Sksg\\n    id=\\"PZ7lDrwYdZc\\"\\n    params=\\"autoplay=1&autohide=1&showinfo=1&rel=0\\"\\n    title=\\"How to become 37.78 times better at anything\\"\\n    poster=\\"maxresdefault\\"\\n    webp\\n  />\\n</div>\\n```\\n\\n\x3c!--truncate--\x3e\\n\\n## TL;DR\\n\\n> 3 Lessons & 4 Laws\\n\\n### 3 Lessons\\n\\n- Lesson 1: Small habits make a big difference\\n- Lesson 2: Forget about setting goals. Focus on your system instead. \\n- Lesson 3: Build identity-based habits\\n\\n    1. Decide the type of person you want to be.\\n    2. Prove it to yourself with small wins.\\n\\n\\n### 4 Laws\\n\\n![The Habit Loop](./img/habitloop.png)\\n\\n\\nCue     | Carving    | Response | Reward\\n---     | ---        | ---      |---\\nObvious | Attractive | Easy     | Satisfying\\n\\n#### How to create a good habit:\\n\\n- The 1st law (Cue): Make it obvious. \\n- The 2nd law (Craving): Make it attractive. \\n- The 3rd law (Response): Make it easy. \\n- The 4th law (Reward): Make it satisfying.\\n\\n#### How to break a bad habit:\\n\\n- Inversion of the 1st law (Cue): Make it invisible. \\n- Inversion of the 2nd law (Craving): Make it unattractive. \\n- Inversion of the 3rd law (Response): Make it difficult. \\n- Inversion of the 4th law (Reward): Make it unsatisfying.\\n\\n## Atomic Habits\\n\\nAtomic Habits: Tiny changes, remarkable results.\\n\\nJust as atoms are the building blocks of molecules, Atomic Habits are the\\nbuilding blocks of remarkable resutls.\\n\\nAtomic Habits is the definitive guide to breaking bad behaviors and adopting\\ngood ones in four steps, showing you how small, incremental, everyday routines\\ncompound into massive, positive change over time.\\n\\n### The power of atomic habits\\n\\n> A slight change in your daily habits can guide your life to a very differenct\\n> destination.\\n> -- James Clear\\n\\n- Massive Action vs 1% Improvements(The power of compound interest)\\n\\n$$\\nA = P(1 + \\\\frac{r}{n})^{nt}\\n$$\\n\\n![improve](./img/improve.png)\\n\\n> Success is the product of daily habits, not once-in-a-lifetime\\n> transformations.\\n> -- James Clear\\n\\n\\n### The true about progress\\n\\nIn fact, progress is not linear.\\nThe most powerful outcomes of any compounding process are delayed so\\n**Patience** is required.\\n\\n![progress](./img/progress.jpg)\\n\\n### Goals vs Systems\\n\\n- Forget about goals, focus on system instead\\n- Goals are good for setting a direction, but systems are best for making\\n  progress.\\n\\n### A system of atomic habits\\n\\n#### Atomic habits\\n\\nJust as atoms are the building blocks of molecules, atomic habits are the\\nbuilding blocks of remarkblae resutls.\\n\\n#### 3 layers of behavior change\\n\\n- Outcomes\\n- Processes\\n- Identity\\n\\nMost people focus on the outcomes but the best way to change your habtis is by\\nfocusing on the person you want to become instead of the results you want.\\n\\n:::info Build identity-based habits\\n\\nThe key to building lasting habits is focusing on creating a new identity\\nfirst. Your current behaviors are simply a reflection of your current identity.\\nWhat you do now is a mirror image of the type of person you believe that you\\nare (either consciously or subconsciously).\\n\\nTo change your behavior for good, you need to start believing new things about\\nyourself. You need to build identity-based habits.\\n\\nChanging your beliefs isn\u2019t nearly as hard as you might think. There are two\\nsteps.\\n\\n1. Decide the type of person you want to be.\\n2. Prove it to yourself with small wins.\\n\\nYour identity emerges out of your habits. Every action is a vote for the type\\nof person you wish to become.\\n\\n:::\\n\\n:::tip Some Examples\\n\\n- The goals isn\'t to run a marathon, its\'s to become a runner.\\n- The golas isn\'t to learn a instrument, it\'s to become a musician.\\n- Tells yourelf \\"I am a runner\\"(running & beging).\\n- Every time you do a workout, you are an athlete.\\n- Every time you write a line of code you are an engineer.\\n\\n:::\\n\\n#### The Habit Loop\\n\\n**Cue -> Craving -> Respoinse -> Rewards**\\n\\n\\n- Example 1\\n    * Cue: Phone buzz\\n    * Craving: want to know who messaged\\n    * Response: Pick up phone\\n    * Reward: Solve the problem of who messaged\\n- Exmaple 2\\n    * Cue: Minds goes blank at work\\n    * Craving: Want to alleviate frustration\\n    * Response: Check social media\\n    * Reward: Satified the need to feel loss frustrated.\\n\\n:::tip Watching out your habit\\n\\nTry to think of any cues in your daily life that are initially your good or bad\\nhabits loops.\\n\\n:::\\n\\n## 4 Laws\\n\\n### Law 1: Make it Obvious\\n\\n- 1.1 Habit Scorecard\\n\\n    > Until you make the unconscious conscious, it will direct your life and\\n    > you will call it fate. -- Carl Yung\\n\\n- 1.2 Set a time and place\\n\\n    \\"I will [behavior] at [time] in [this location]\\"\\n\\n- 1.3 Stacking Habits\\n\\n    \\"After [current habit], I will [new habit]\\"\\n\\n- 1.4 Environments vs Motivation\\n\\n    > Environments is the invisible hand that shapes the human behavior. -- James Clear\\n\\n    Make the cues of good habits obvious and visible.\\n    Design your enviroments, \\"One space, One Use\\".\\n\\n### Law 2: Make it Attractive\\n\\n- 2.1 Dopamine\\n- 2.2 Temptation bunding\\n    \\n    Pair an action you want to do with an action you need to do.\\n\\n- 2.3 Group influence\\n- 2.4 Where Cravings come from\\n- 2.5 Reprogram you brain to enjoy hard habits\\n\\n    Create a motivation ritual. Do something you enjoy immediately before a\\n    difficult habit.\\n    \\n    > Enjoying play games. You can make hard habits more attractive if you can\\n    > learn to associate them with a positive experience.\\n\\n### Law 3: Make it Easy\\n\\n- 3.1 Reduce friction: The law of least effort\\n    \\n    Decrease the number of steps between you and your good habits.\\n\\n- 3.2  Prime the environment\\n\\n    Prepare the environment to make future actions easier.\\n\\n- 3.3 Master the decision moment\\n\\n    Optimize the small choices that deliver outsized impact.\\n\\n- 3.4 Use the **Two-Minute Rule**\\n    \\n    Downscale your habit until they can be done in two minutes or less.\\n\\n- 3.5 Automate your habits\\n\\n:::info Two-Minute Rule\\n\\nThe two-minute rule aims to banish procrastination and help people\\naccomplish small tasks. Here\'s what the rule says: <highlight color=\\"green\\">if you can do an action in two minutes or less, tackle it at the moment \u2014 and don\'t delay.</highlight> This has the potential to deliver long-term benefits.\\n\\n:::\\n\\n### Law 4: Make it Satisfying\\n\\n- 4.1 Use reinforcement\\n    \\n    Rewarding yourself and feeling successful.\\n    Give yourself an immediate reward when you complete you habit.\\n\\n- 4.2 Make \\"doing nothing\\" enjoyable\\n\\n    When avoiding a bad habit, design a way to see the benefits.\\n\\n- 4.3 Use a habit tracker\\n\\n    Keep track of your habit streak and \\"don\'t break the chain\\".\\n\\n- 4.4 Never miss twice\\n\\n    When you forget to do a habit, make sure you get back on track immediately.\\n\\n    > Lost days hurt you more than successful days help you.\\n\\n\\n## References\\n\\n- https://jamesclear.com/atomic-habits-summary"},{"id":"art-of-writing-software","metadata":{"permalink":"/blog/art-of-writing-software","source":"@site/blog/2023-03-29-art-of-writing-software.mdx","title":"The Art of Writing Software","description":"---","date":"2023-03-29T00:00:00.000Z","formattedDate":"March 29, 2023","tags":[{"label":"software","permalink":"/blog/tags/software"}],"readingTime":0.725,"hasTruncateMarker":true,"authors":[{"name":"luzzy zhang","title":"Software Development Engineer","url":"https://github.com/luzzyzhang/","imageURL":"https://github.com/luzzyzhang.png","key":"lz"}],"frontMatter":{"slug":"art-of-writing-software","title":"The Art of Writing Software","authors":["lz"],"tags":["software"]},"prevItem":{"title":"Atomic Habits","permalink":"/blog/atomic-habits"},"nextItem":{"title":"Concurrency","permalink":"/blog/concurrency"}},"content":"```mdx-code-block\\nimport LiteYouTubeEmbed from \'react-lite-youtube-embed\';\\nimport \'react-lite-youtube-embed/dist/LiteYouTubeEmbed.css\'\\n```\\n\\n```mdx-code-block\\n<div className=\\"video-container\\">\\n  <LiteYouTubeEmbed\\n    // cSpell:ignore Yhyx Sksg\\n    id=\\"QdVFvsCWXrA\\"\\n    params=\\"autoplay=1&autohide=1&showinfo=1&rel=0\\"\\n    title=\\"The Art of Writing Software\\"\\n    poster=\\"maxresdefault\\"\\n    webp\\n  />\\n</div>\\n```\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n- Computers are like musical instruments, built to perform.\\n- The code of computer programmers is \'software\'.\\n- Easy or hard, all programming problems are solved with languages, data structures, and algorithms. Plus, a lot of hard, focused concentration.\\n\\n> I found that writing software was much more difficult than anything else I\\n> had done in my life. I had to keep so many things in my head at once, I\\n> couldn\'t just put them down and start something else.\\n> -- Donald Knuth\\n\\n> You know, I just want it to be elegant in a\\n> way that hangs together so somebody can\\n> read it and simle.\\n> -- Donald Knuth"},{"id":"concurrency","metadata":{"permalink":"/blog/concurrency","source":"@site/blog/2023-03-15-concurrency.md","title":"Concurrency","description":"Concurrency is the ability of different parts or units of a program, algorithm,","date":"2023-03-15T00:00:00.000Z","formattedDate":"March 15, 2023","tags":[{"label":"concurrency","permalink":"/blog/tags/concurrency"}],"readingTime":1.475,"hasTruncateMarker":true,"authors":[{"name":"luzzy zhang","title":"Software Development Engineer","url":"https://github.com/luzzyzhang/","imageURL":"https://github.com/luzzyzhang.png","key":"lz"}],"frontMatter":{"slug":"concurrency","authors":["lz"],"tags":["concurrency"]},"prevItem":{"title":"The Art of Writing Software","permalink":"/blog/art-of-writing-software"}},"content":"Concurrency is the ability of different parts or units of a program, algorithm,\\nor problem to be executed out-of-order or in partial order, without affecting\\nthe outcome. This allows for parallel execution of the concurrent units, which\\ncan significantly improve overall speed of the execution in multi-processor and\\nmulti-core systems. In more technical terms, concurrency refers to the\\ndecomposability of a program, algorithm, or problem into order-independent or\\npartially-ordered components or units of computation.\\n\\n\x3c!--truncate--\x3e\\n\\nAccording to Rob Pike, concurrency is the composition of independently\\nexecuting computations, and concurrency is not parallelism: **concurrency is\\nabout dealing with lots of things at once but parallelism is about doing lots\\nof things at once.** Concurrency is about structure, parallelism is about\\nexecution, concurrency provides a way to structure a solution to solve a\\nproblem that may (but not necessarily) be parallelizable.\\n\\nA number of mathematical models have been developed for general concurrent\\ncomputation including Petri nets, process calculi, the parallel random-access\\nmachine model, the actor model and the Reo Coordination Language.\\n\\n\\n:::tip\\n\\nConcurrency is about structure, parallelism is about\\nexecution, concurrency provides a way to structure a solution to solve a\\nproblem that may (but not necessarily) be parallelizable.\\n\\n:::\\n\\n## Issues\\n\\nBecause computations in a concurrent system can interact with each other while\\nbeing executed, the number of possible execution paths in the system can be\\nextremely large, and the resulting outcome can be indeterminate. Concurrent use\\nof shared resources can be a source of indeterminacy leading to issues such as\\ndeadlocks, and resource starvation.\\n\\nDesign of concurrent systems often entails finding reliable techniques for\\ncoordinating their execution, data exchange, memory allocation, and execution\\nscheduling to minimize response time and maximise throughput.\\n\\n\\n\\n---\\n# References\\n\\n- [Wikipedia concurrency](https://en.wikipedia.org/wiki/Concurrency_(computer_science))\\n- [Wikipedia concurrent computing](https://en.wikipedia.org/wiki/Concurrent_computing)\\n- [Wikipeida parallel programming](https://en.wikipedia.org/wiki/Parallel_programming)"}]}')}}]);