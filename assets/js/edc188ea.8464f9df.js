"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8594],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=o,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(g,i(i({ref:t},p),{},{components:r})):n.createElement(g,i({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7903:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={id:"productivity",title:"Joe Armstrong on Programmer Productivity",tags:["til","software productivity"]},i=void 0,s={unversionedId:"til/misc/productivity",id:"til/misc/productivity",title:"Joe Armstrong on Programmer Productivity",description:"Most time isn't spent programming anyway -  programmer time is spent:",source:"@site/docs/til/misc/software-productivity.mdx",sourceDirName:"til/misc",slug:"/til/misc/productivity",permalink:"/docs/til/misc/productivity",draft:!1,tags:[{label:"til",permalink:"/docs/tags/til"},{label:"software productivity",permalink:"/docs/tags/software-productivity"}],version:"current",frontMatter:{id:"productivity",title:"Joe Armstrong on Programmer Productivity",tags:["til","software productivity"]},sidebar:"tutorialSidebar",previous:{title:"Errors Handling",permalink:"/docs/til/elixir/try-catch-rescue"}},l={},c=[],p={toc:c},m="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Most time isn't spent programming anyway -  programmer time is spent:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"a) fixing broken stuff that should not be broken\nb) trying to figure out what problem the customer actually wants solving\nc) writing experimental code to test some idea\nd) googling for some obscure fact that is needed to solve a) or b)\ne) writing and testing production code\n")),(0,o.kt)("p",null,"e) is actually pretty easy once a) - d) are fixed. But most measurements of\nproductivity only measure\nlines of code in e) and man hours."),(0,o.kt)("p",null,"I've been in this game for many years now, and I have the impression that a) is\ntaking a larger and larger percentage of my time. 30 years ago there was far\nless software, but the software there was usually worked without any problems -\nthe code was a lot smaller and consequently easier to understand."),(0,o.kt)("p",null,"Again in the last 30 years programs have got hundreds to thousands of times\nlarger (in terms of code lines) but programming languages haven't got that much\nbetter and our brains have not gotten any smarter. So the gap between what we\ncan build and what we can understand is growing rapidly."),(0,o.kt)("p",null,"Extrapolating a bit I guess a) is going to increase - so in a few years we'll\nhave incredibly smart devices which almost work, and when broke nobody will\nable to fix, and programmers will spend 100% of their time fixing broken stuff\nthat should not be broke ..."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=6411101"},"https://news.ycombinator.com/item?id=6411101")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://groups.google.com/g/erlang-programming/c/OiyGQ4UHqxw/m/HgGma01CGqYJ"},"https://groups.google.com/g/erlang-programming/c/OiyGQ4UHqxw/m/HgGma01CGqYJ"))))}u.isMDXComponent=!0}}]);