"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7857],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),f=o,d=p["".concat(l,".").concat(f)]||p[f]||m[f]||a;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4484:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={slug:"concurrency",authors:["lz"],tags:["concurrency"]},i="Concurrency",c={permalink:"/blog/concurrency",source:"@site/blog/2023-03-15-concurrency.md",title:"Concurrency",description:"Concurrency is the ability of different parts or units of a program, algorithm,",date:"2023-03-15T00:00:00.000Z",formattedDate:"March 15, 2023",tags:[{label:"concurrency",permalink:"/blog/tags/concurrency"}],readingTime:1.475,hasTruncateMarker:!0,authors:[{name:"luzzy zhang",title:"Software Development Engineer",url:"https://github.com/luzzyzhang/",imageURL:"https://github.com/luzzyzhang.png",key:"lz"}],frontMatter:{slug:"concurrency",authors:["lz"],tags:["concurrency"]},prevItem:{title:"The Art of Writing Software",permalink:"/blog/art-of-writing-software"}},l={authorsImageUrls:[void 0]},u=[{value:"Issues",id:"issues",level:2}],s={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Concurrency is the ability of different parts or units of a program, algorithm,\nor problem to be executed out-of-order or in partial order, without affecting\nthe outcome. This allows for parallel execution of the concurrent units, which\ncan significantly improve overall speed of the execution in multi-processor and\nmulti-core systems. In more technical terms, concurrency refers to the\ndecomposability of a program, algorithm, or problem into order-independent or\npartially-ordered components or units of computation."),(0,o.kt)("p",null,"According to Rob Pike, concurrency is the composition of independently\nexecuting computations, and concurrency is not parallelism: ",(0,o.kt)("strong",{parentName:"p"},"concurrency is\nabout dealing with lots of things at once but parallelism is about doing lots\nof things at once.")," Concurrency is about structure, parallelism is about\nexecution, concurrency provides a way to structure a solution to solve a\nproblem that may (but not necessarily) be parallelizable."),(0,o.kt)("p",null,"A number of mathematical models have been developed for general concurrent\ncomputation including Petri nets, process calculi, the parallel random-access\nmachine model, the actor model and the Reo Coordination Language."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Concurrency is about structure, parallelism is about\nexecution, concurrency provides a way to structure a solution to solve a\nproblem that may (but not necessarily) be parallelizable.")),(0,o.kt)("h2",{id:"issues"},"Issues"),(0,o.kt)("p",null,"Because computations in a concurrent system can interact with each other while\nbeing executed, the number of possible execution paths in the system can be\nextremely large, and the resulting outcome can be indeterminate. Concurrent use\nof shared resources can be a source of indeterminacy leading to issues such as\ndeadlocks, and resource starvation."),(0,o.kt)("p",null,"Design of concurrent systems often entails finding reliable techniques for\ncoordinating their execution, data exchange, memory allocation, and execution\nscheduling to minimize response time and maximise throughput."),(0,o.kt)("hr",null),(0,o.kt)("h1",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Concurrency_(computer_science)"},"Wikipedia concurrency")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Concurrent_computing"},"Wikipedia concurrent computing")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Parallel_programming"},"Wikipeida parallel programming"))))}m.isMDXComponent=!0}}]);